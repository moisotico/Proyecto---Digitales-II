/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "mux_synth.v:9" *)
module mux_synth(data_out, valid_out, clk, reset_L, valid_in_0, data_in_0, valid_in_1, data_in_1);
  (* src = "mux_synth.v:72" *)
  wire [7:0] _000_;
  (* src = "mux_synth.v:72" *)
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  (* src = "mux_synth.v:12" *)
  input clk;
  (* src = "mux_synth.v:15" *)
  input [7:0] data_in_0;
  (* src = "mux_synth.v:17" *)
  input [7:0] data_in_1;
  (* src = "mux_synth.v:10" *)
  output [7:0] data_out;
  (* src = "mux_synth.v:13" *)
  input reset_L;
  (* src = "mux_synth.v:14" *)
  input valid_in_0;
  (* src = "mux_synth.v:16" *)
  input valid_in_1;
  (* src = "mux_synth.v:11" *)
  output valid_out;
  NOT _046_ (
    .A(reset_L),
    .Y(_002_)
  );
  NOR _047_ (
    .A(valid_in_1),
    .B(valid_in_0),
    .Y(_003_)
  );
  NOR _048_ (
    .A(_003_),
    .B(_002_),
    .Y(_001_)
  );
  NOT _049_ (
    .A(data_in_1[0]),
    .Y(_004_)
  );
  NOT _050_ (
    .A(valid_in_0),
    .Y(_005_)
  );
  NAND _051_ (
    .A(valid_in_1),
    .B(_005_),
    .Y(_006_)
  );
  NOR _052_ (
    .A(_006_),
    .B(_004_),
    .Y(_007_)
  );
  NOT _053_ (
    .A(data_in_0[0]),
    .Y(_008_)
  );
  NOR _054_ (
    .A(_008_),
    .B(_005_),
    .Y(_009_)
  );
  NOR _055_ (
    .A(_009_),
    .B(_007_),
    .Y(_010_)
  );
  NOR _056_ (
    .A(_010_),
    .B(_002_),
    .Y(_000_[0])
  );
  NOT _057_ (
    .A(data_in_1[1]),
    .Y(_011_)
  );
  NOR _058_ (
    .A(_006_),
    .B(_011_),
    .Y(_012_)
  );
  NOT _059_ (
    .A(data_in_0[1]),
    .Y(_013_)
  );
  NOR _060_ (
    .A(_013_),
    .B(_005_),
    .Y(_014_)
  );
  NOR _061_ (
    .A(_014_),
    .B(_012_),
    .Y(_015_)
  );
  NOR _062_ (
    .A(_015_),
    .B(_002_),
    .Y(_000_[1])
  );
  NOT _063_ (
    .A(data_in_1[2]),
    .Y(_016_)
  );
  NOR _064_ (
    .A(_006_),
    .B(_016_),
    .Y(_017_)
  );
  NOT _065_ (
    .A(data_in_0[2]),
    .Y(_018_)
  );
  NOR _066_ (
    .A(_018_),
    .B(_005_),
    .Y(_019_)
  );
  NOR _067_ (
    .A(_019_),
    .B(_017_),
    .Y(_020_)
  );
  NOR _068_ (
    .A(_020_),
    .B(_002_),
    .Y(_000_[2])
  );
  NOT _069_ (
    .A(data_in_1[3]),
    .Y(_021_)
  );
  NOR _070_ (
    .A(_006_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _071_ (
    .A(data_in_0[3]),
    .Y(_023_)
  );
  NOR _072_ (
    .A(_023_),
    .B(_005_),
    .Y(_024_)
  );
  NOR _073_ (
    .A(_024_),
    .B(_022_),
    .Y(_025_)
  );
  NOR _074_ (
    .A(_025_),
    .B(_002_),
    .Y(_000_[3])
  );
  NOT _075_ (
    .A(data_in_1[4]),
    .Y(_026_)
  );
  NOR _076_ (
    .A(_006_),
    .B(_026_),
    .Y(_027_)
  );
  NOT _077_ (
    .A(data_in_0[4]),
    .Y(_028_)
  );
  NOR _078_ (
    .A(_028_),
    .B(_005_),
    .Y(_029_)
  );
  NOR _079_ (
    .A(_029_),
    .B(_027_),
    .Y(_030_)
  );
  NOR _080_ (
    .A(_030_),
    .B(_002_),
    .Y(_000_[4])
  );
  NOT _081_ (
    .A(data_in_1[5]),
    .Y(_031_)
  );
  NOR _082_ (
    .A(_006_),
    .B(_031_),
    .Y(_032_)
  );
  NOT _083_ (
    .A(data_in_0[5]),
    .Y(_033_)
  );
  NOR _084_ (
    .A(_033_),
    .B(_005_),
    .Y(_034_)
  );
  NOR _085_ (
    .A(_034_),
    .B(_032_),
    .Y(_035_)
  );
  NOR _086_ (
    .A(_035_),
    .B(_002_),
    .Y(_000_[5])
  );
  NOT _087_ (
    .A(data_in_1[6]),
    .Y(_036_)
  );
  NOR _088_ (
    .A(_006_),
    .B(_036_),
    .Y(_037_)
  );
  NOT _089_ (
    .A(data_in_0[6]),
    .Y(_038_)
  );
  NOR _090_ (
    .A(_038_),
    .B(_005_),
    .Y(_039_)
  );
  NOR _091_ (
    .A(_039_),
    .B(_037_),
    .Y(_040_)
  );
  NOR _092_ (
    .A(_040_),
    .B(_002_),
    .Y(_000_[6])
  );
  NOT _093_ (
    .A(data_in_0[7]),
    .Y(_041_)
  );
  NOR _094_ (
    .A(_041_),
    .B(_005_),
    .Y(_042_)
  );
  NOT _095_ (
    .A(data_in_1[7]),
    .Y(_043_)
  );
  NOR _096_ (
    .A(_006_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _097_ (
    .A(_044_),
    .B(_042_),
    .Y(_045_)
  );
  NOR _098_ (
    .A(_045_),
    .B(_002_),
    .Y(_000_[7])
  );
  DFF _099_ (
    .C(clk),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  DFF _100_ (
    .C(clk),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  DFF _101_ (
    .C(clk),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  DFF _102_ (
    .C(clk),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  DFF _103_ (
    .C(clk),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  DFF _104_ (
    .C(clk),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  DFF _105_ (
    .C(clk),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  DFF _106_ (
    .C(clk),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  DFF _107_ (
    .C(clk),
    .D(_001_),
    .Q(valid_out)
  );
endmodule
