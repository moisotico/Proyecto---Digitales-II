/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "mux_synth.v:9" *)
module mux_synth(data_out, valid_out, clk, reset_L, valid_in_0, data_in_0, valid_in_1, data_in_1);
  (* src = "mux_synth.v:67" *)
  wire _00_;
  (* src = "mux_synth.v:67" *)
  wire [7:0] _01_;
  (* src = "mux_synth.v:67" *)
  wire _02_;
  (* src = "mux_synth.v:67" *)
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  (* src = "mux_synth.v:19" *)
  wire channel;
  (* src = "mux_synth.v:12" *)
  input clk;
  (* src = "mux_synth.v:15" *)
  input [7:0] data_in_0;
  (* src = "mux_synth.v:17" *)
  input [7:0] data_in_1;
  (* src = "mux_synth.v:10" *)
  output [7:0] data_out;
  (* src = "mux_synth.v:19" *)
  wire ignore;
  (* src = "mux_synth.v:13" *)
  input reset_L;
  (* src = "mux_synth.v:19" *)
  wire selector;
  (* src = "mux_synth.v:14" *)
  input valid_in_0;
  (* src = "mux_synth.v:16" *)
  input valid_in_1;
  (* src = "mux_synth.v:11" *)
  output valid_out;
  NOT _37_ (
    .A(selector),
    .Y(_04_)
  );
  NOR _38_ (
    .A(_04_),
    .B(valid_out),
    .Y(_05_)
  );
  NAND _39_ (
    .A(channel),
    .B(valid_out),
    .Y(_06_)
  );
  NAND _40_ (
    .A(_06_),
    .B(valid_in_0),
    .Y(_07_)
  );
  NOR _41_ (
    .A(_07_),
    .B(_05_),
    .Y(_08_)
  );
  NAND _42_ (
    .A(reset_L),
    .B(valid_in_1),
    .Y(_09_)
  );
  NOR _43_ (
    .A(_09_),
    .B(_08_),
    .Y(_00_)
  );
  NAND _44_ (
    .A(valid_in_1),
    .B(valid_in_0),
    .Y(_10_)
  );
  NOR _45_ (
    .A(_10_),
    .B(valid_out),
    .Y(_11_)
  );
  NOR _46_ (
    .A(_11_),
    .B(selector),
    .Y(_12_)
  );
  NAND _47_ (
    .A(_11_),
    .B(selector),
    .Y(_13_)
  );
  NAND _48_ (
    .A(_13_),
    .B(reset_L),
    .Y(_14_)
  );
  NOR _49_ (
    .A(_14_),
    .B(_12_),
    .Y(_03_)
  );
  NOT _50_ (
    .A(reset_L),
    .Y(_15_)
  );
  NOR _51_ (
    .A(valid_in_1),
    .B(valid_in_0),
    .Y(_16_)
  );
  NOR _52_ (
    .A(_16_),
    .B(_15_),
    .Y(_02_)
  );
  NOT _53_ (
    .A(valid_in_0),
    .Y(_17_)
  );
  NOR _54_ (
    .A(valid_in_1),
    .B(_17_),
    .Y(_18_)
  );
  NOR _55_ (
    .A(_18_),
    .B(_08_),
    .Y(_19_)
  );
  NOR _56_ (
    .A(_19_),
    .B(_15_),
    .Y(_20_)
  );
  NAND _57_ (
    .A(_20_),
    .B(data_in_0[0]),
    .Y(_21_)
  );
  NAND _58_ (
    .A(_00_),
    .B(data_in_1[0]),
    .Y(_22_)
  );
  NAND _59_ (
    .A(_22_),
    .B(_21_),
    .Y(_01_[0])
  );
  NAND _60_ (
    .A(_00_),
    .B(data_in_1[1]),
    .Y(_23_)
  );
  NAND _61_ (
    .A(_20_),
    .B(data_in_0[1]),
    .Y(_24_)
  );
  NAND _62_ (
    .A(_24_),
    .B(_23_),
    .Y(_01_[1])
  );
  NAND _63_ (
    .A(_00_),
    .B(data_in_1[2]),
    .Y(_25_)
  );
  NAND _64_ (
    .A(_20_),
    .B(data_in_0[2]),
    .Y(_26_)
  );
  NAND _65_ (
    .A(_26_),
    .B(_25_),
    .Y(_01_[2])
  );
  NAND _66_ (
    .A(_00_),
    .B(data_in_1[3]),
    .Y(_27_)
  );
  NAND _67_ (
    .A(_20_),
    .B(data_in_0[3]),
    .Y(_28_)
  );
  NAND _68_ (
    .A(_28_),
    .B(_27_),
    .Y(_01_[3])
  );
  NAND _69_ (
    .A(_00_),
    .B(data_in_1[4]),
    .Y(_29_)
  );
  NAND _70_ (
    .A(_20_),
    .B(data_in_0[4]),
    .Y(_30_)
  );
  NAND _71_ (
    .A(_30_),
    .B(_29_),
    .Y(_01_[4])
  );
  NAND _72_ (
    .A(_00_),
    .B(data_in_1[5]),
    .Y(_31_)
  );
  NAND _73_ (
    .A(_20_),
    .B(data_in_0[5]),
    .Y(_32_)
  );
  NAND _74_ (
    .A(_32_),
    .B(_31_),
    .Y(_01_[5])
  );
  NAND _75_ (
    .A(_00_),
    .B(data_in_1[6]),
    .Y(_33_)
  );
  NAND _76_ (
    .A(_20_),
    .B(data_in_0[6]),
    .Y(_34_)
  );
  NAND _77_ (
    .A(_34_),
    .B(_33_),
    .Y(_01_[6])
  );
  NAND _78_ (
    .A(_00_),
    .B(data_in_1[7]),
    .Y(_35_)
  );
  NAND _79_ (
    .A(_20_),
    .B(data_in_0[7]),
    .Y(_36_)
  );
  NAND _80_ (
    .A(_36_),
    .B(_35_),
    .Y(_01_[7])
  );
  DFF _81_ (
    .C(clk),
    .D(_01_[0]),
    .Q(data_out[0])
  );
  DFF _82_ (
    .C(clk),
    .D(_01_[1]),
    .Q(data_out[1])
  );
  DFF _83_ (
    .C(clk),
    .D(_01_[2]),
    .Q(data_out[2])
  );
  DFF _84_ (
    .C(clk),
    .D(_01_[3]),
    .Q(data_out[3])
  );
  DFF _85_ (
    .C(clk),
    .D(_01_[4]),
    .Q(data_out[4])
  );
  DFF _86_ (
    .C(clk),
    .D(_01_[5]),
    .Q(data_out[5])
  );
  DFF _87_ (
    .C(clk),
    .D(_01_[6]),
    .Q(data_out[6])
  );
  DFF _88_ (
    .C(clk),
    .D(_01_[7]),
    .Q(data_out[7])
  );
  DFF _89_ (
    .C(clk),
    .D(_02_),
    .Q(valid_out)
  );
  DFF _90_ (
    .C(clk),
    .D(_03_),
    .Q(selector)
  );
  DFF _91_ (
    .C(clk),
    .D(_00_),
    .Q(channel)
  );
  assign ignore = valid_out;
endmodule
